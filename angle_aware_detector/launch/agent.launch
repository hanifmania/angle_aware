<?xml version="1.0"?>
<launch>
    <arg name="number" default="1" />
    <arg name="use_dummy" default="false" />
    <node pkg="angle_aware_detector" type="dummy_object_detector.py" name="dummy_object_detector" output="screen" if="$(arg use_dummy)"></node>
    <node pkg="angle_aware_detector" type="object_detector_yolov5.py" name="object_detector_yolov5" output="screen" unless="$(arg use_dummy)">
        <param name="output_pose_topic" value="object_detector/posestamped" />
        <param name="pytorch_hub_path" value="$(find angle_aware_detector)/yolov5" />
        <param name="model_path" value="$(find angle_aware_detector)/model/test1_yolov5s.pt" />
        <param name="output_img_topic" value="object_detector/image_raw" />
        <rosparam file="$(find bebop_driver)/data/bebop2_camera_calib.yaml" command="load" ns="" />
    </node>
    <node pkg="angle_aware_detector" type="detect_filter.py" name="detect_filter" output="screen"></node>
    <!-- visualize -->
    <node pkg="angle_aware_detector" type="pictogram.py" name="pictogram" output="screen"></node>
    <node pkg="bebop_hatanaka_base" type="posestamped2tf.py" name="object_detector_posestamped2tf" output="log" respawn="false" respawn_delay="0">
        <param name="posestamped" value="object_detector/target_posestamped" />
        <param name="tfname" value="bebop10$(arg number)/object_detector/target_posestamped" />
    </node>
    <node name="AI_image_republish" pkg="image_transport" type="republish" args="raw compressed">
        <remap from="in" to="object_detector/image_raw" />
        <remap from="out" to="object_detector/image_raw" />
    </node>

</launch>