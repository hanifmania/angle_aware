<?xml version="1.0"?>
<launch>
    <arg name="number" default="" />
    <arg name="sim" default="false" />
    <arg name="use_aruco" default="false" />

    <group ns="bebop10$(arg number)">
        <rosparam file="$(find angle_aware_switch)/config/agent10$(arg number).yaml" command="load" ns="" />
        <include file="$(find bebop_aruco)/launch/agent_base.launch" if="$(arg use_aruco)">
            <arg name="number" value="$(arg number)" />
            <arg name="sim" value="$(arg sim)" />
        </include>

        <include file="$(find bebop_hatanaka_base)/launch/agent_base.launch" unless="$(arg use_aruco)">
            <arg name="number" value="$(arg number)" />
            <arg name="sim" value="$(arg sim)" />
        </include>

        <node pkg="angle_aware_switch" type="patrol_agent.py" name="patrol_agent" output="screen">
            <rosparam file="$(find angle_aware_switch)/config/patrol.yaml" command="load" ns="" />
            <param name="input_psi_topic" value="/patrol_psi" />
        </node>
        <node pkg="angle_aware_switch" type="angle_aware_agent.py" name="angle_aware_agent" output="screen">
            <rosparam file="$(find angle_aware_switch)/config/angle_aware.yaml" command="load" ns="" />
            <!-- <param name="input_psi_topic" value="/angle_aware_psi" /> -->
        </node>
        <node pkg="angle_aware_switch" type="grape_detector.py" name="grape_detector" output="screen"></node>

        <node pkg="angle_aware_switch" type="pictogram.py" name="pictogram" output="screen"></node>
        <node pkg="angle_aware_switch" type="mode_diagnostic.py" name="mode" output="screen"></node>
        <node pkg="angle_aware_pytorch" type="object_detector_yolov5.py" name="object_detector_yolov5" output="screen" respawn="false" respawn_delay="0">
            <param name="output_pose_topic" value="object_detector/posestamped" />
            <param name="pytorch_hub_path" value="$(find angle_aware_pytorch)/yolov5" />
            <param name="model_path" value="$(find angle_aware_pytorch)/model/test1_yolov5s.pt" />
            <param name="output_img_topic" value="object_detector/image_raw" />
            <rosparam file="$(find bebop_driver)/data/bebop2_camera_calib.yaml" command="load" ns="" />
        </node>

        <node name="AI_image_republish" pkg="image_transport" type="republish" args="raw compressed">
            <remap from="in" to="object_detector/image_raw" />
            <remap from="out" to="object_detector/image_raw/compressed" />
        </node>

        <node pkg="bebop_hatanaka_base" type="posestamped2tf.py" name="object_detector_posestamped2tf" output="log" respawn="false" respawn_delay="0">
            <param name="posestamped" value="grape_posestamped" />
            <param name="tfname" value="bebop10$(arg number)/object_detector/posestamped" />
        </node>


        <node pkg="angle_aware_control" type="show_theta_field.py" name="show_theta_field" output="log" respawn="false" respawn_delay="0">
            <param name="frame_id" value="bebop10$(arg number)/object_detector/posestamped" />
            <param name="input_field_topic" value="angle_aware/phi" />
            <param name="field_param_name" value="~angle_aware/phi" />
            <param name="output_topic" value="phi_point_cloud" />
            <rosparam file="$(find angle_aware_switch)/config/angle_aware.yaml" command="load" ns="" />

        </node>
        <include file="$(find bebop_bag)/launch/rosbag_record_img.launch">
            <arg name="rosbag_output" default="$(find angle_aware_switch)/rosbag/rosbag_img" />
        </include>
    </group>
</launch>